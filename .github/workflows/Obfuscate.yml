name: Build & Obfuscate BPB Panel

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 1 * * *"  # 每天凌晨 1:00 运行

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 检出代码
      - name: Check out the code
        uses: actions/checkout@v4

      # 设置 Node.js 环境
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"  # 使用稳定版本

      # 安装依赖并检查版本
      - name: Install dependencies
        run: |
          set -x  # 打开调试模式，显示每个命令执行过程
          npm install -g javascript-obfuscator wrangler@latest  # 安装混淆器和 wrangler
          which javascript-obfuscator  # 显示 javascript-obfuscator 的路径
          javascript-obfuscator --version  # 输出 javascript-obfuscator 版本
          which wrangler  # 显示 wrangler 的路径
          wrangler --version  # 输出 wrangler 版本

      # 获取 BPB Worker 脚本
      - name: Clone BPB worker.js
        run: |
          set -x  # 打开调试模式
          wget -q -O origin.js https://raw.githubusercontent.com/bia-pain-bache/BPB-Worker-Panel/main/build/unobfuscated-worker.js || { echo 'Download failed'; exit 1; }
          ls -l origin.js  # 确认文件是否下载成功

      # 执行代码混淆
      - name: Obfuscate BPB worker.js
        run: |
          set -x  # 打开调试模式
          javascript-obfuscator origin.js --output _worker.js \
            --compact true \
            --control-flow-flattening false \  # 减少控制流混淆
            --dead-code-injection false \  # 减少死代码注入
            --identifier-names-generator hexadecimal \
            --rename-globals false \  # 避免全局变量重命名
            --string-array true \
            --string-array-encoding 'base64' \  # 使用 base64 编码
            --string-array-threshold 0.5 \  # 提高字符串数组阈值
            --unicode-escape-sequence false  # 避免 unicode 转义

      # 提交混淆后的代码
      - name: Commit and Push Changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: ':arrow_up: Update latest BPB panel'
          commit_author: 'github-actions[bot] <github-actions[bot]@users.noreply.github.com>'

      # 发布到 Cloudflare Workers
      - name: Publish to Cloudflare Workers
        run: |
          set -x  # 打开调试模式
          npx wrangler publish  # 使用 npx 发布
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}  # 从 GitHub Secrets 中获取 Cloudflare API Token
